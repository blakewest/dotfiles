[alias]
    # hist from Dan
    hist = log --graph --pretty=format:\"%Cgreen %t %Cblue %ar %Creset %s %Cred [%an]\"

    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --graph --pretty=format:\"%Cgreen %t %Cblue %ar %Creset %s %Cred [%an]\"

    # View the current working tree status using the short format
    s = status -s

    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

    # `git di $number` shows the diff between the state `$number` revisions ago and the current state
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

    # Add
    a = add

    # Commit
    c = commit --verbose

    # Merge
    m = merge --no-ff

    # Rebase
    r = rebase

    # Switch to a branch, creating it if necessary
    co = checkout

    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    # remove all branches merged into master
    pruneall = !"git checkout master && git pull origin master && git fetch --all -p && git branch --merged master | grep -v \"*\" | xargs -n 1 git branch -d"

    # Credit an author on the latest commit
    credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

    # Interactive rebase with the given number of latest commits
    reb = "!r() { git rebase -i HEAD~$1; }; r"

[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes

    # Treat spaces before tabs, lines that are indented with 8 or more spaces, and
    # all kinds of trailing whitespace as an error.
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of
    # a line
    # whitespace = space-before-tab,indent-with-non-tab,trailing-space

    # Use sublime as default editor
    editor = "vim"

    # Make `git rebase` safer on OS X
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    trustctime = false

[web]
    browser = google-chrome

[rerere]
    enabled = 1

[color]
    # Use colors in Git commands that are capable of colored output when
    # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true

[diff]

	# Detect copies as well as renames
	renames = copies

[help]

	# Automatically correct and execute mistyped commands
	autocorrect = 1

[push]

	# Use the Git 1.x.x default to avoid errors on machines with old Git
	# installations. To use `simple` instead, add this to your `~/.extra` file:
	# `git config --global push.default simple`. See http://git.io/mMah-w.
	default = matching

# URL shorthands

[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
    insteadOf = "gist:"

[user]
    name = Blake West
    email = bwest87@gmail.com
[mergetool "sourcetree"]
    cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
    trustExitCode = true
[pull]
    default = current
